name: Automatisation des tests DevSecOps

on: push

jobs:
  # ----------------------------------------------------------------------
  # 1. Job Dependances : Contrôle requirements.txt (Vérification des dépendances)
  # ----------------------------------------------------------------------
  Dependances:
    runs-on: ubuntu-latest
    steps:
      # Récupère le code de votre repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Utilise Trivy pour scanner le fichier requirements.txt
      - name: Scan Dependencies (requirements.txt) with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs' # Type de scan sur le système de fichiers
          target: 'requirements.txt' # Cible le fichier spécifique
          severity: 'HIGH,CRITICAL' # Fait échouer si HIGH ou CRITICAL sont trouvées
          exit-code: '1' 
          format: 'table'
  
  # ----------------------------------------------------------------------
  # 2. Job Dockerfile_Scan : Contrôle du Dockerfile (Bonnes pratiques + Vulnérabilités de l'image)
  # ----------------------------------------------------------------------
  # Renommé en Dockerfile_Scan pour clarté. Notez le "needs: Dependances" implicite.
  Dockerfile_Scan:
    runs-on: ubuntu-latest
    needs: Dependances # Se lance uniquement si le job Dependances a réussi
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Étape 1 : Construire l'image Docker
      - name: Build Docker Image for Scan
        # Cette action est nécessaire pour construire l'image avant de la scanner
        uses: docker/build-push-action@v5
        with:
          context: .
          # IMPORTANT: Utilisez le nom de votre fichier Dockerfile durci
          file: Dockerfile.hardened 
          tags: imghardened:latest
          push: false # On ne déploie pas encore, on construit juste pour le scan
          
      # Étape 2 : Contrôle des bonnes pratiques du Dockerfile avec Dockle
      - name: Scan Dockerfile Best Practices with Dockle
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            goodwithtech/dockle:latest imghardened:latest

  # ----------------------------------------------------------------------
  # 3. Job Deploy : Déploiement (Se lance si tout est sécurisé)
  # ----------------------------------------------------------------------
  Deploy:
    runs-on: ubuntu-latest
    needs: Dockerfile_Scan
    steps:
      - name: Deploy
        run: |
          echo "Rien à faire ici. Votre application est prête à être déployée"
