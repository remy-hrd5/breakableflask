name: Automatisation des tests DevSecOps

on: push

jobs:
  # ----------------------------------------------------------------------
  # 1° - Job Dependances : Contrôle requirements.txt (Scan statique Trivy)
  # ----------------------------------------------------------------------
  Dependances:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Scan Dependencies (requirements.txt) with Trivy
        # Utilise l'action Trivy pour analyser le fichier de dépendances
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs' # Scan du filesystem pour les fichiers de dépendances
          # L'action Trivy utilise 'input' pour spécifier le chemin du fichier lors d'un scan 'fs'
          input: 'requirements.txt'
          # Fait échouer le pipeline si des vulnérabilités HIGH ou CRITICAL sont trouvées
          severity: 'HIGH,CRITICAL'
          exit-code: '1' 
          format: 'table'
  
  # ----------------------------------------------------------------------
  # 2° - Job Dockerfile : Contrôle de l'image Dockerfile
  # ----------------------------------------------------------------------
  Dockerfile:
    runs-on: ubuntu-latest
    needs: Dependances # Se lance uniquement si le scan des dépendances est OK
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Étape 1 : Construire l'image Docker à partir de votre Dockerfile durci
      - name: Build Docker Image for Scan
        uses: docker/build-push-action@v5
        with:
          context: .
          # IMPORTANT: Assurez-vous que ce nom de fichier existe dans votre repo !
          file: Dockerfile.hardened 
          tags: imghardened:latest
          push: false # Construire l'image localement pour le scan
          
      # Étape 2 : Contrôle des bonnes pratiques du Dockerfile avec Dockle
      # Vérifie la conformité (non-root, nettoyage des caches, ajout de HEALTHCHECK, etc.)
      - name: Test Dockerfile Best Practices with Dockle
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            goodwithtech/dockle:latest imghardened:latest

      # Étape 3 : Contrôle des vulnérabilités de l'image finale avec Trivy
      # Ce scan prend en compte les paquets OS et le résultat des étapes de build
      - name: Scan Final Image Vulnerabilities with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'imghardened:latest' # Cible l'image que nous venons de construire
          scan-type: 'image'
          severity: 'HIGH,CRITICAL'
          exit-code: '1' 
          format: 'table'

  # ----------------------------------------------------------------------
  # Job Deploy : Déploiement
  # ----------------------------------------------------------------------
  Deploy:
    runs-on: ubuntu-latest
    needs: Dockerfile
    steps:
      - name: Deploy
        run: |
          echo "Rien à faire ici. Votre application est prête à être déployée"
